================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 40, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11603
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2516.0, 9088.0, 11604.0    exclusion rate: 0.22
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11603
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2929.0, 8675.0, 11604.0    exclusion rate: 0.25
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.40.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 9643
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1641.0, 8003.0, 9644.0    exclusion rate: 0.17
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 9643
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2201.0, 7443.0, 9644.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.40.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11299
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 3011.0, 8289.0, 11300.0    exclusion rate: 0.27
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11299
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 3994.0, 7306.0, 11300.0    exclusion rate: 0.35
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.40.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 14015
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2856.0, 11160.0, 14016.0    exclusion rate: 0.20
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 14015
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 3040.0, 10976.0, 14016.0    exclusion rate: 0.22
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.40.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11745
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 3188.0, 8558.0, 11746.0    exclusion rate: 0.27
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 11745
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 4306.0, 7440.0, 11746.0    exclusion rate: 0.37
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.40.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 12693
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1755.0, 10939.0, 12694.0    exclusion rate: 0.14
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.40.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 40, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 12693
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2323.0, 10371.0, 12694.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 40
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.40.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.40.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.40.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.40.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.40.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.40.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.40.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.40.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.40.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.40.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.40.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.40.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.40.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 80, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5801
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1620.0, 4182.0, 5802.0    exclusion rate: 0.28
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5801
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1820.0, 3982.0, 5802.0    exclusion rate: 0.31
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.80.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4821
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 886.0, 3936.0, 4822.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4821
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1325.0, 3497.0, 4822.0    exclusion rate: 0.27
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.80.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5649
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1854.0, 3796.0, 5650.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5649
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2345.0, 3305.0, 5650.0    exclusion rate: 0.42
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.80.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 7007
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1739.0, 5269.0, 7008.0    exclusion rate: 0.25
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 7007
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1678.0, 5330.0, 7008.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.80.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5872
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1912.0, 3961.0, 5873.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 5872
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 2693.0, 3180.0, 5873.0    exclusion rate: 0.46
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.80.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 6346
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1120.0, 5227.0, 6347.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.80.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 80, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 6346
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1490.0, 4857.0, 6347.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 80
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.80.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.80.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.80.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.80.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.80.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.80.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.80.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.80.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.80.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.80.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.80.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.80.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.80.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 120, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3867
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1158.0, 2710.0, 3868.0    exclusion rate: 0.30
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3867
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1299.0, 2569.0, 3868.0    exclusion rate: 0.34
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.120.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3214
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 645.0, 2570.0, 3215.0    exclusion rate: 0.20
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3214
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 873.0, 2342.0, 3215.0    exclusion rate: 0.27
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.120.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3766
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1221.0, 2546.0, 3767.0    exclusion rate: 0.32
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3766
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1633.0, 2134.0, 3767.0    exclusion rate: 0.43
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.120.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4671
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1169.0, 3503.0, 4672.0    exclusion rate: 0.25
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4671
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1106.0, 3566.0, 4672.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.120.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3915
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1261.0, 2655.0, 3916.0    exclusion rate: 0.32
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3915
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1826.0, 2090.0, 3916.0    exclusion rate: 0.47
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.120.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4231
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 786.0, 3446.0, 4232.0    exclusion rate: 0.19
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.120.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 120, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 4231
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1050.0, 3182.0, 4232.0    exclusion rate: 0.25
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 120
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.120.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.120.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.120.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.120.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.120.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.120.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.120.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.120.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.120.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.120.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.120.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.120.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.120.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 160, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2900
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 863.0, 2038.0, 2901.0    exclusion rate: 0.30
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2900
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 967.0, 1934.0, 2901.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.160.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2410
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 432.0, 1979.0, 2411.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2410
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 645.0, 1766.0, 2411.0    exclusion rate: 0.27
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.160.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2824
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 927.0, 1898.0, 2825.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2824
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1235.0, 1590.0, 2825.0    exclusion rate: 0.44
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.160.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3503
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 854.0, 2650.0, 3504.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3503
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 846.0, 2658.0, 3504.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.160.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2936
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 947.0, 1990.0, 2937.0    exclusion rate: 0.32
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2936
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1350.0, 1587.0, 2937.0    exclusion rate: 0.46
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.160.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3173
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 569.0, 2605.0, 3174.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.160.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 160, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 3173
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 774.0, 2400.0, 3174.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 160
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.160.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.160.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.160.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.160.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.160.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.160.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.160.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.160.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.160.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.160.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.160.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.160.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.160.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 200, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2320
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 701.0, 1620.0, 2321.0    exclusion rate: 0.30
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2320
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 771.0, 1550.0, 2321.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.200.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1928
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 325.0, 1604.0, 1929.0    exclusion rate: 0.17
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1928
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 452.0, 1477.0, 1929.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.200.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2259
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 744.0, 1516.0, 2260.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2259
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 975.0, 1285.0, 2260.0    exclusion rate: 0.43
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.200.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2803
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 685.0, 2119.0, 2804.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2803
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 616.0, 2188.0, 2804.0    exclusion rate: 0.22
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.200.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2349
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 754.0, 1596.0, 2350.0    exclusion rate: 0.32
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2349
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 1091.0, 1259.0, 2350.0    exclusion rate: 0.46
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.200.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2538
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 459.0, 2080.0, 2539.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.200.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 200, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2538
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 625.0, 1914.0, 2539.0    exclusion rate: 0.25
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 200
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.200.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.200.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.200.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.200.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.200.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.200.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.200.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.200.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.200.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.200.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.200.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.200.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.200.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 240, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1933
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 557.0, 1377.0, 1934.0    exclusion rate: 0.29
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1933
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 632.0, 1302.0, 1934.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.240.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1607
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 259.0, 1349.0, 1608.0    exclusion rate: 0.16
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1607
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 369.0, 1239.0, 1608.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.240.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1883
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 583.0, 1301.0, 1884.0    exclusion rate: 0.31
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1883
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 800.0, 1084.0, 1884.0    exclusion rate: 0.42
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.240.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2335
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 550.0, 1786.0, 2336.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2335
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 512.0, 1824.0, 2336.0    exclusion rate: 0.22
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.240.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1957
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 598.0, 1360.0, 1958.0    exclusion rate: 0.31
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1957
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 879.0, 1079.0, 1958.0    exclusion rate: 0.45
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.240.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2115
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 380.0, 1736.0, 2116.0    exclusion rate: 0.18
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.240.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 240, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2115
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 509.0, 1607.0, 2116.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 240
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.240.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.240.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.240.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.240.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.240.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.240.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.240.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.240.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.240.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.240.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.240.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.240.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.240.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 280, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1657
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 477.0, 1181.0, 1658.0    exclusion rate: 0.29
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1657
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 537.0, 1121.0, 1658.0    exclusion rate: 0.32
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.280.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1377
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 232.0, 1146.0, 1378.0    exclusion rate: 0.17
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1377
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 295.0, 1083.0, 1378.0    exclusion rate: 0.21
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.280.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1614
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 462.0, 1153.0, 1615.0    exclusion rate: 0.29
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1614
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 678.0, 937.0, 1615.0    exclusion rate: 0.42
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.280.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2002
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 475.0, 1528.0, 2003.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 2002
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 417.0, 1586.0, 2003.0    exclusion rate: 0.21
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.280.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1677
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 513.0, 1165.0, 1678.0    exclusion rate: 0.31
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1677
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 740.0, 938.0, 1678.0    exclusion rate: 0.44
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.280.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1813
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 301.0, 1513.0, 1814.0    exclusion rate: 0.17
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.280.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 280, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1813
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 413.0, 1401.0, 1814.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 280
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.280.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.280.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.280.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.280.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.280.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.280.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.280.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.280.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.280.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.280.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.280.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.280.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.280.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 320, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1450
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 408.0, 1043.0, 1451.0    exclusion rate: 0.28
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1450
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 492.0, 959.0, 1451.0    exclusion rate: 0.34
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.320.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1205
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 186.0, 1020.0, 1206.0    exclusion rate: 0.15
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1205
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 252.0, 954.0, 1206.0    exclusion rate: 0.21
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.320.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1412
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 406.0, 1007.0, 1413.0    exclusion rate: 0.29
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1412
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 582.0, 831.0, 1413.0    exclusion rate: 0.41
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.320.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1751
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 412.0, 1340.0, 1752.0    exclusion rate: 0.24
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1751
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 364.0, 1388.0, 1752.0    exclusion rate: 0.21
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.320.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1468
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 431.0, 1038.0, 1469.0    exclusion rate: 0.29
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1468
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 635.0, 834.0, 1469.0    exclusion rate: 0.43
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.320.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1586
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 242.0, 1345.0, 1587.0    exclusion rate: 0.15
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.320.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 320, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1586
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 366.0, 1221.0, 1587.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 320
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.320.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.320.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.320.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.320.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.320.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.320.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.320.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.320.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.320.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.320.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.320.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.320.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.320.class.csv exported
================refresh pkls==============================================================
sessions: [1, 3, 4, 5, 6, 7], sensors: ['DW', 'NDW'], raw_type: corrected, paras: {'window_size': 360, 'overlap_rate': 0.5}
======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session1.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1289
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 360.0, 930.0, 1290.0    exclusion rate: 0.28
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1289
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 423.0, 867.0, 1290.0    exclusion rate: 0.33
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 1, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session1_NDW.360.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session3.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1071
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 145.0, 927.0, 1072.0    exclusion rate: 0.14
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1071
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 201.0, 871.0, 1072.0    exclusion rate: 0.19
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 3, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session3_NDW.360.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session4.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1255
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 349.0, 907.0, 1256.0    exclusion rate: 0.28
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
marker
marker
marker
marker
marker
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1255
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 524.0, 732.0, 1256.0    exclusion rate: 0.42
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 4, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session4_NDW.360.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session5.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1557
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 354.0, 1204.0, 1558.0    exclusion rate: 0.23
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1557
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 300.0, 1258.0, 1558.0    exclusion rate: 0.19
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
marker
marker
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 5, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session5_NDW.360.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session6.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1305
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 368.0, 938.0, 1306.0    exclusion rate: 0.28
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1305
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 560.0, 746.0, 1306.0    exclusion rate: 0.43
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 6, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session6_NDW.360.class.pkl serialized

======start loading wockets raw csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_DW.raw.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7_NDW.raw.csv
======start loading smoking annotation csv files: ========
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
/home/james/Projects/mHealth/smdt_python/puff_corrected_dataset/session7.annotation.csv
=====================end loading files======================
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1410
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 222.0, 1189.0, 1411.0    exclusion rate: 0.16
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: DW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_DW.360.class.pkl serialized
=========segmentation starts==============
method: window
{'window_size': 360, 'overlap_rate': 0.5}
======segmentation information===============
========connect segments=============
total segmentations: 1410
=======================start preprocessing segment raw dataframe=================
parameters: gaussian filter sigma: 2.00, median kernel size: 5.00
=========setting segment annotation dataset==============
========================start retrieving info from annotation segment df=================
================get start time===========================
================get end time=============================
================get segment duration=====================
================get session number=====================
================get sensor code=====================
================get inside puff / puff duration=====================
================get inside puff / segment duration=====================
================get prototypical flag of puffs=====================
================get puff index=====================
================get puff side======================
===================get in-car proportion================
===================get talking proportion================
===================get unknown-activity proportion================
===================get drinking-beverage proportion================
===================get reading-paper proportion================
===================get eating-a-meal proportion================
===================get smoking proportion================
===================get using-computer proportion================
===================get using-phone proportion================
===================get walking proportion================
===================get superposition proportion================
================concate information=====================
============Start assigning and encoding classes=================
================thresholds=====================
walking: 0.3
drinking/eating: 0.25
phone: 0.3
computer: 0.3
puff: 0.3, 0.3
============start pre exclusion==================================
===================preexclusion criterions====================
std: <= 0.130000, slope: <= 0.000400, peak-peak amplitude: < 0.500000
Exclusion result: excluded/keep/total: 301.0, 1110.0, 1411.0    exclusion rate: 0.21
===========start computing features=================
===========feature function dictionary==============
{u'std': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_std'}, u'rms': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rms'}, u'axes crossing rate': {u'paras': {u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_axescrossrate'}, u'slope': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_slope'}, u'min': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'min'}, u'max': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'max'}, u'skew': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_skew'}, u'median': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'median'}, u'peak-peak amplitude': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_pppeakamplitude'}, u'peak rate': {u'paras': {u'q': 0.25, u'sigma': 5.0}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_peakrate'}, u'percentile': {u'paras': {u'q': 90}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_percentile'}, u'snr': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_snr'}, u'R squared': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_rsquared'}, u'correlation': {u'paras': {u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_correlation'}, u'MSE': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mse'}, u'kurtosis': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_kurtosis'}, u'mean': {u'paras': {}, u'apply': [u'rawx', u'rawy', u'rawz'], u'handler': u'f_mean'}}
==========compute std================
Inf values: False
NaN values: False
==========compute rms================
Inf values: False
NaN values: False
==========compute axes crossing rate================
{u'q': 0.25, u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute slope================
Inf values: False
NaN values: False
==========compute min================
Inf values: False
NaN values: False
==========compute max================
Inf values: False
NaN values: False
==========compute skew================
Inf values: False
NaN values: False
==========compute median================
Inf values: False
NaN values: False
==========compute peak-peak amplitude================
{u'q': 90}
Inf values: False
NaN values: False
==========compute peak rate================
{u'q': 0.25, u'sigma': 5.0}
Inf values: False
NaN values: False
==========compute percentile================
{u'q': 90}
Inf values: False
NaN values: False
==========compute snr================
Inf values: False
NaN values: False
==========compute R squared================
Inf values: False
NaN values: False
==========compute correlation================
{u'type': u'pearson', u'with': [u'rawy', u'rawz', u'rawx']}
Inf values: False
NaN values: False
==========compute MSE================
Inf values: False
NaN values: False
==========compute kurtosis================
Inf values: False
NaN values: False
==========compute mean================
Inf values: False
NaN values: False
=======get data dataframe from feature raw dataframe===============
==========start serializing data and class dataframe================
session: 7, sensor: NDW, window size: 360
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.360.data.pkl serialized
/home/james/Projects/mHealth/smdt_python/pkl/session7_NDW.360.class.pkl serialized

===============build all session dataset for each sensor from pkls==========
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_DW.360.class.pkl
generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_NDW.360.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BW.360.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BW.360.class.pkl
============start merge left and right side dataset==================
sessions: all
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session_all_BFW.360.class.pkl
============start merge left and right side dataset==================
sessions: [1, 3, 4, 5, 6, 7]
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session1_BFW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session3_BFW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session4_BFW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session5_BFW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session6_BFW.360.class.pkl
Generated pkls: /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.360.data.pkl, /home/james/Projects/mHealth/smdt_python/pkl/session7_BFW.360.class.pkl
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session1_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session3_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session4_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session5_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session6_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session7_BFW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_DW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_NDW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BW.360.class.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.360.data.csv exported
/home/james/Projects/mHealth/smdt_python/feature_dataset/session_all_BFW.360.class.csv exported
